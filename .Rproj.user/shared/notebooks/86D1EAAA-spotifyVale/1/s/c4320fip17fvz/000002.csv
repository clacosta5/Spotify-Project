"0","# ADDING DATE AND TIMING"
"0","# prova con i secondi"
"0","mySpotify = streamHistory2 %>% "
"0","  as_tibble() %>% #as_tibble() turns an existing object, such as a data frame or matrix, into a so-called tibble, a data                   #frame with class tbl_df"
"0","  mutate_at(""endTime"", ymd_hms) %>%  #aggiungo i secondi"
"0","  mutate(date = floor_date(endTime, ""day"") %>% as_date, seconds = msPlayed / 1000, minutes = seconds / 60)"
"0","# date -> prendo la data e basta senza orario, ricavo secondi e minuti suonati"
"0",""
"0",""
"0","oreStreaming = mySpotify %>% "
"0","  filter(date >= ""2020-01-01"") %>% "
"0","  group_by(date) %>% "
"0","  group_by(date = floor_date(date, ""week"")) %>%  # raggruppo per settimane"
"0","  summarize(ore = sum(minutes) / 60) %>%         # sommo i minuti di ogni settimana / 60 = ore"
"0","  #verb summarise() riduce più valori fino a un singolo riassunto"
"0","  arrange(date) %>%                              # metto in ordine di data crescente"
"0","  ggplot(aes(x = date, y = ore)) + "
"0","  geom_col(aes(fill = ore)) +"
"0","  scale_fill_gradient(low = ""blue"", high = ""red"") + "
"0","  labs(x= ""data"", y= ""ore di ascolto"") + "
"0","  ggtitle(""In che date ho ascoltato più o meno musica su Spotify?"", ""Attività di ascolto per settimana da agosto 2020 a agosto 2021"")"
"0",""
"0","ggplotly(oreStreaming)"
