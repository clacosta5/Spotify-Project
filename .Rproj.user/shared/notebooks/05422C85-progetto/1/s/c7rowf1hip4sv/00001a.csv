"0","topArtistFromSavedTracks = savedTracks %>%"
"0","  group_by(artist) %>%"
"0","  count(artist) %>%"
"0","  arrange(-n)"
"0",""
"0","green <- ""#1ed760"""
"0","yellow <- ""#e7e247"""
"0","pink <- ""#ff6f59"""
"0","blue <- ""#17bebb"""
"0","  "
"0","  # top artisti basato sulle canzoni salvate"
"0","plotMyFavs <- topArtistFromSavedTracks %>%"
"0","  filter(n >= 11) %>%"
"0","  mutate(freq = case_when(n > 100 ~ '> 100 brani',"
"0","      between(n, 50, 99) ~ '50-99 brani',"
"0","      between(n, 20, 49) ~ '20-49 brani',"
"0","      TRUE ~ '< 20 brani')) %>%"
"0","  mutate(freq = factor(freq, levels = c('> 100 brani', '50-99 brani', '20-49 brani', '< 20 brani'))) %>%"
"0","  ggplot(mapping = aes(x = reorder(artist, -n), y = n, fill = freq, , text = paste(""artista: "", artist, ""<br>"", ""n canzoni : "", n))) +"
"0","  geom_col() +"
"0","  scale_fill_manual(values=c(green, yellow, pink, blue)) +"
"0","  labs(x= ""Artista"", y= ""Numero di canzoni"", fill = NULL) +"
"0","  ggtitle(""Top artisti basato sulle canzoni salvate nella mia libreria"") +"
"0","  theme(axis.text.x = element_text(angle = -60),"
"0","        axis.title = element_text(face = 'bold'),"
"0","        plot.title = element_text(hjust = 0.5, face = 'bold', size = 15),"
"0","        plot.caption = element_text(hjust = 1,face = 'bold.italic'))"
"0","ggplotly(plotMyFavs, tooltip=c(""text""))"
